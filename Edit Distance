#include<vector>

int solve(string &a,string &b,int i,int j,vector<vector<int>> &dp)

{

    if(i==a.length())

    {

        return b.length()-j;

 

    }

    if(j==b.length())

    {

        return a.length()-i;

    }

 

    if(dp[i][j] != -1)

    {

        return dp[i][j];

    }

    int ans=0;

    if(a[i]==b[j])

    {

        ans = solve(a,b,i+1,j+1,dp);

                

    }

    else{

        int insert = 1+solve(a,b,i+1,j,dp);

        int delet = 1+solve(a,b,i,j+1,dp);

        int replace = 1+solve(a,b,i+1,j+1,dp);

 

        ans=min(insert,min(delet,replace));

    }

    return dp[i][j] = ans;

}

int editDistance(string str1, string str2)

{

    int n = str1.length();

    int m = str2.length();

    vector<vector<int>>dp(n+1,vector<int>(m+1,-1));

    return solve(str1,str2,0,0,dp);

}

